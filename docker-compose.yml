name: preflight
services:
  postgres:
    image: postgres:17-alpine
    container_name: pf-db
    ports:
      - 5432:${POSTGRES_PORT}
    volumes:
      - pf-data:/var/lib/postgresql/data
      - ./_entrypoint:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_APP_USER=${POSTGRES_APP_USER}
      - POSTGRES_APP_PASSWORD=${POSTGRES_APP_PASSWORD}
    networks:
      - preflight_pf-net

  backend:
    container_name: pf-backend
    build: .
    ports:
      - ${PORT}:3000
    networks:
      - preflight_pf-net
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=postgres     # ใช้ชื่อ service postgres เป็น host
      - POSTGRES_APP_USER=${POSTGRES_APP_USER}
      - POSTGRES_APP_PASSWORD=${POSTGRES_APP_PASSWORD}
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "npm run db:migrate | awk '{ print strftime(\"[%Y-%m-%d %H:%M:%S]\"), \$0; fflush(); }' | tee -a /app/logs/migration.log && npm start"

networks:
  preflight_pf-net:
    external: true

volumes:
  pf-data:
